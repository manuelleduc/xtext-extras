/**
 * Copyright (c) 2013 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package org.eclipse.xtext.mbase.compiler;

/**
 * @author Holger Schill - Initial contribution and API
 * @author Miro Spoenemann
 */
/* @Accessors */@SuppressWarnings("all")
public class GeneratorConfig {
  /**
   * Whether expressions shall be generated.
   */
  private boolean generateExpressions = true;
  
  /**
   * Whether <code>@SuppressWarnings</code> shall be generated for non-nested types.
   */
  private boolean generateSyntheticSuppressWarnings = true;
  
  /**
   * Whether <code>@Generated</code> shall be generated for non-nested types.
   */
  private boolean generateGeneratedAnnotation = false;
  
  /**
   * Whether the current time shall be added to <code>@Generated</code> annotations.
   */
  private boolean includeDateInGeneratedAnnotation = false;
  
  /**
   * The comment that is added to <code>@Generated</code> annotations, also supports variables:
   * <ul>
   *   <li><code>${sourcefile}</code></li>
   * </ul>
   */
  private String generatedAnnotationComment;
  
  /**
   * Version of the Java Source code that's being generated by the compiler.
   */
  private /* JavaVersion */Object javaSourceVersion /* Skipped initializer because of errors */;
  
  /**
   * Copy the values of the given generator configuration.
   */
  public GeneratorConfig copy(final GeneratorConfig other) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field GeneratorConfig.javaSourceVersion refers to the missing type \n\t */\n\tJavaVersion"
      + "\nThe field GeneratorConfig.javaSourceVersion refers to the missing type \n\t */\n\tJavaVersion");
  }
}
